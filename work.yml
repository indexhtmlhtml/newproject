workflow:
  name: "AI自动生成试卷"
  description: "通过AI生成考试试卷的工作流"
  trigger:
    type: "http"
    endpoint: "/api/generate-paper"
    method: "POST"
  actions:
    - name: "收集用户输入"
      type: "input"
      parameters:
        - name: "duration"
          type: "integer"
        - name: "totalScore"
          type: "integer"
        - name: "difficulty"
          type: "string"
        - name: "questionTypes"
          type: "array"
        - name: "language"
          type: "string"
      validate:
        - condition: "duration > 0"
          message: "考试时长必须大于0"
        - condition: "totalScore > 0"
          message: "总分必须大于0"
    - name: "准备API请求"
      type: "prepare_request"
      parameters:
        url: "https://api.openai.com/v1/chat/completions"
        method: "POST"
        headers:
          Authorization: "Bearer ${API_KEY}"
          Content-Type: "application/json"
        body:
          model: "gpt-3.5-turbo"
          messages:
            - role: "system"
              content: "你是一个专业的编程教师，擅长出编程题目。"
            - role: "user"
              content: "请生成试卷..."
    - name: "发送API请求"
      type: "http_request"
      input: "准备API请求"
      on_error:
        - action: "记录错误"
        - notify: "用户通知"
    - name: "处理响应"
      type: "process_response"
      input: "发送API请求"
      validate:
        - condition: "response.status == 200"
          message: "API请求失败"
      transform:
        - action: "格式化试卷"
    - name: "格式化试卷"
      type: "format"
      input: "处理响应"
      output: "formatted_paper"
    - name: "存储试卷"
      type: "store"
      input: "formatted_paper"
      storage: "database"
  notifications:
    - name: "用户通知"
      type: "email"
      recipients: "${user.email}"
      subject: "试卷生成状态"
      body: "您的试卷已成功生成。"
  error_handling:
    - action: "记录错误"
    - notify: "用户通知"